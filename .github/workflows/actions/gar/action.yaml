name: commit
inputs:
  service-name:
    required: true
  version:
    required: true
  github-pat:
    required: true

  gcp-project-id:
    required: true
  gcp-service-account:
    required: true
  gcp-workload-identity-provider:
    required: true
  gcp-gar-address:
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout zero-trusted-pipeline
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.github-pat }}

    - name: Authenticate with Google Cloud
      id: auth
      uses: google-github-actions/auth@v1
      with:
        token_format: access_token
        workload_identity_provider: ${{ inputs.gcp-workload-identity-provider }}
        service_account: ${{ inputs.gcp-service-account }}
        access_token_lifetime: 300s

    - name: Login to Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.gcp-gar-address }}
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: Get commit sha
      id: commit
      run: echo "sha_short=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Set current date as env variable
      id: date
      run: echo "now=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
      shell: bash

    - name: Tag Docker image and push to Google Artifact Registry
      id: docker-push-tagged
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: |
          ${{ inputs.gcp-gar-address }}/${{ inputs.gcp-project-id }}/zero-trusted-pipeline/${{ inputs.service-name }}:${{ inputs.version }}
          ${{ inputs.gcp-gar-address }}/${{ inputs.gcp-project-id }}/zero-trusted-pipeline/${{ inputs.service-name }}:latest
        context: .
        build-args: |
          ATLANTIS_BASE_TAG_TYPE=alpine
          ATLANTIS_VERSION=${{ inputs.version }}
          ATLANTIS_COMMIT=${{ steps.commit.outputs.sha_short }}
          ATLANTIS_DATE=${{ steps.date.outputs.now }}